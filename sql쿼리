-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema gamedori
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gamedori
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gamedori` DEFAULT CHARACTER SET utf8 ;
USE `gamedori` ;

-- -----------------------------------------------------
-- Table `gamedori`.`CATEGORY_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`CATEGORY_TB` (
  `CATE_CODE` INT NOT NULL AUTO_INCREMENT,
  `CATE_NAME` VARCHAR(10) NOT NULL,
  `CATE_REFCODE` TINYINT NOT NULL,
  PRIMARY KEY (`CATE_CODE`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_TB` (
  `PROD_IDX` INT NOT NULL AUTO_INCREMENT,
  `CATEGORY_TB_CODE` INT NOT NULL,
  `PROD_NAME` VARCHAR(45) NOT NULL,
  `PROD_PRICE` INT NOT NULL,
  `PROD_DETAIL` TEXT NOT NULL,
  `PROD_STOCK` INT NOT NULL,
  `PROD_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PROD_HIT` INT NOT NULL,
  `PROD_SALES` INT NOT NULL,
  `PROD_CO` VARCHAR(45) NOT NULL,
  `PROD_OPT` VARCHAR(45) NOT NULL,
  `PROD_RDATE` VARCHAR(45) NOT NULL,
  `PROD_RATING` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:성인',
  PRIMARY KEY (`PROD_IDX`),
  INDEX `fk_PRODUCT_TB_CATEGORY_TB1_idx` (`CATEGORY_TB_CODE` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_TB_CATEGORY_TB1`
    FOREIGN KEY (`CATEGORY_TB_CODE`)
    REFERENCES `gamedori`.`CATEGORY_TB` (`CATE_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`LEVEL_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`LEVEL_TB` (
  `LEVEL_IDX` INT NOT NULL AUTO_INCREMENT,
  `LEVEL_TYPE` INT NOT NULL DEFAULT 1 COMMENT '1:브론즈/2:실버/3:골드',
  PRIMARY KEY (`LEVEL_IDX`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`MEMBER_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`MEMBER_TB` (
  `MEMBER_IDX` INT NOT NULL AUTO_INCREMENT,
  `LEVEL_TB_IDX` INT NULL,
  `MEMBER_NAME` VARCHAR(45) NOT NULL,
  `MEMBER_PW` VARCHAR(45) NOT NULL,
  `MEMBER_EMAIL` VARCHAR(45) NOT NULL,
  `MEMBER_PHONE` VARCHAR(45) NOT NULL,
  `MEMBER_INDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MEMBER_STATE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:정지/3:탈퇴\n',
  `MEMBER_ROLE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:관리자',
  `MEMBER_EMAIL_YN` INT NOT NULL DEFAULT 1 COMMENT '1:Y,2:N',
  `MEMBER_EMAIL_KEY` VARCHAR(45) NULL,
  `MEMBER_PHONE_YN` INT NOT NULL DEFAULT 1 COMMENT '1:Y 2:N',
  `MEMBER_PHONE_KEY` VARCHAR(45) NULL,
  PRIMARY KEY (`MEMBER_IDX`),
  INDEX `fk_MEMBER_TB_LEVEL_TB1_idx` (`LEVEL_TB_IDX` ASC) VISIBLE,
  UNIQUE INDEX `MEMBER_EMAIL_UNIQUE` (`MEMBER_EMAIL` ASC) VISIBLE,
  CONSTRAINT `fk_MEMBER_TB_LEVEL_TB1`
    FOREIGN KEY (`LEVEL_TB_IDX`)
    REFERENCES `gamedori`.`LEVEL_TB` (`LEVEL_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`ADDRESS_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`ADDRESS_TB` (
  `ADDRESS_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `ADDR_1` VARCHAR(45) NOT NULL,
  `ADDR_2` VARCHAR(45) NOT NULL,
  `ADDR_3` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ADDRESS_IDX`),
  INDEX `fk_ADDRESS_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_ADDRESS_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`CART_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`CART_TB` (
  `CART_QTY` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `CART_YN` TINYINT NOT NULL DEFAULT 1 COMMENT '1:Y/2:N',
  PRIMARY KEY (`CART_QTY`),
  INDEX `fk_CART_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_CART_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_CART_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CART_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`COUPON_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`COUPON_TB` (
  `COUPON_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `COUPON_NAME` VARCHAR(45) NOT NULL,
  `COUPON_DISCOUNT` DOUBLE NOT NULL,
  `COUPON_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `COUPON_START` DATETIME NOT NULL,
  `COUPON_END` DATETIME NOT NULL,
  `COUPON_MIN_AMOUNT` INT NOT NULL,
  `COUPON_MAX_AMOUNT` INT NOT NULL,
  PRIMARY KEY (`COUPON_IDX`),
  INDEX `fk_COUPON_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_COUPON_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`ORDER_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`ORDER_TB` (
  `ORDER_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `ORDER_DATE` DATETIME NOT NULL,
  `ORDER_ADDR1` VARCHAR(45) NOT NULL,
  `ORDER_ADDR2` VARCHAR(45) NOT NULL,
  `ORDER_ADDR3` VARCHAR(45) NOT NULL,
  `ORDER_NAME` VARCHAR(45) NOT NULL,
  `ORDER_PHONE` VARCHAR(45) NOT NULL,
  `ORDER_DEL_TYPE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:도서산간',
  PRIMARY KEY (`ORDER_IDX`),
  INDEX `fk_ORDER_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_ORDER_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`ORDERS_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`ORDERS_TB` (
  `orders_idx` INT NOT NULL AUTO_INCREMENT,
  `ORDER_idx` INT NOT NULL,
  `COUPON_idx` INT NOT NULL,
  `orders_cnt` INT NOT NULL,
  `orders_price` INT NOT NULL,
  `orders_state` TINYINT NOT NULL DEFAULT 1 COMMENT '1-주문접수/2-결제완료/3-상품준비중/4-발송준비중/5-발송완료/6-주문취소/7-반품접수/8-반품완료',
  `PRODUCT_prod_idx` INT NOT NULL,
  PRIMARY KEY (`orders_idx`),
  INDEX `fk_ORDERS_M_ORDER_M1_idx` (`ORDER_idx` ASC) VISIBLE,
  INDEX `fk_ORDERS_M_COUPON1_idx` (`COUPON_idx` ASC) VISIBLE,
  INDEX `fk_ORDERS_PRODUCT1_idx` (`PRODUCT_prod_idx` ASC) VISIBLE,
  CONSTRAINT `fk_ORDERS_M_ORDER_M1`
    FOREIGN KEY (`ORDER_idx`)
    REFERENCES `gamedori`.`ORDER_TB` (`order_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDERS_M_COUPON1`
    FOREIGN KEY (`COUPON_idx`)
    REFERENCES `gamedori`.`COUPON_TB` (`coupon_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDERS_PRODUCT1`
    FOREIGN KEY (`PRODUCT_prod_idx`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`prod_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`POST_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`POST_TB` (
  `post_idx` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_idx` INT NOT NULL,
  `post_title` VARCHAR(45) NOT NULL,
  `post_wdate` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `post_contents` TEXT NOT NULL,
  `post_writer` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`post_idx`),
  INDEX `fk_POST_MEMBER1_idx` (`MEMBER_idx` ASC) VISIBLE,
  CONSTRAINT `fk_POST_MEMBER1`
    FOREIGN KEY (`MEMBER_idx`)
    REFERENCES `gamedori`.`MEMBER_TB` (`member_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`QA_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`QA_TB` (
  `QA_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `QA_TITLE` VARCHAR(45) NOT NULL,
  `QA_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `QA_CONTENTS` TEXT NOT NULL,
  `QA_WRITER` VARCHAR(45) NOT NULL,
  `QA_YN` TINYINT NOT NULL DEFAULT 2 COMMENT '1:Y/2:N',
  PRIMARY KEY (`QA_IDX`),
  INDEX `fk_QA_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_QA_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`QA_A_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`QA_A_TB` (
  `QA_A_REPLY` VARCHAR(45) NOT NULL,
  `QA_TB_IDX` INT NOT NULL,
  PRIMARY KEY (`QA_A_REPLY`),
  INDEX `fk_QA_A_TB_QA_TB1_idx` (`QA_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_QA_A_TB_QA_TB1`
    FOREIGN KEY (`QA_TB_IDX`)
    REFERENCES `gamedori`.`QA_TB` (`QA_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`REVIEW_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`REVIEW_TB` (
  `REVIEW_IDX` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `REVIEW_TITLE` VARCHAR(45) NOT NULL,
  `REVIEW_CONTENTS` TEXT NOT NULL,
  `REVIEW_WRITER` VARCHAR(45) NOT NULL,
  `REVIEW_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `REVIEW_HIT` INT NOT NULL,
  `REVIEW_STAR` TINYINT NOT NULL DEFAULT 0 COMMENT '1 : 0.5점 / 2 : 1점 / 3 : 1.5점 / 4 : 2점 / 5 : 2.5점 / 6 : 3점 / 7 : 3.5점 /  8 : 4점  / 9 : 4.5점 / 10 : 5점',
  `REVIEW_IMG` VARCHAR(1000) NOT NULL,
  PRIMARY KEY (`REVIEW_IDX`),
  INDEX `fk_REVIEW_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  INDEX `fk_REVIEW_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_REVIEW_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REVIEW_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_Q_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_Q_TB` (
  `PROD_Q_IDX` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `PROD_Q_TITLE` VARCHAR(45) NOT NULL,
  `PROD_Q_CONTENTS` TEXT NOT NULL,
  `PROD_Q_WRITER` VARCHAR(45) NOT NULL,
  `PROD_Q_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PROD_Q_YN` TINYINT NOT NULL DEFAULT '2' COMMENT '1:Y/2:N',
  `PROD_Q_SECRET` TINYINT NOT NULL DEFAULT '2' COMMENT '1:Y/2:N',
  PRIMARY KEY (`PROD_Q_IDX`),
  INDEX `fk_PRODUCT_Q_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_PRODUCT_Q_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_Q_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_Q_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`REFUND_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`REFUND_TB` (
  `REFUND_IDX` INT NOT NULL AUTO_INCREMENT,
  `ORDERD_TB_IDX` INT NOT NULL,
  `REFUND_RES` TINYINT NOT NULL DEFAULT 1,
  `REFUND_IMG` VARCHAR(1000) NOT NULL,
  `REFUND_EMAIL` VARCHAR(45) NOT NULL,
  `REFUND_YN` TINYINT NOT NULL DEFAULT 2 COMMENT '1:Y/2:N',
  PRIMARY KEY (`REFUND_IDX`),
  INDEX `fk_REFUND_TB_ORDERS_TB1_idx` (`ORDERD_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_REFUND_TB_ORDERS_TB1`
    FOREIGN KEY (`ORDERD_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_DETAIL_TB` (`ORDERD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_I_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_I_TB` (
  `image_idx` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_idx` INT NOT NULL,
  `image_origin` VARCHAR(1000) NOT NULL,
  `image_save` VARCHAR(1000) NOT NULL,
  `image_sum` VARCHAR(1000) NOT NULL,
  `image_1` VARCHAR(1000) NULL,
  `image_2` VARCHAR(1000) NULL,
  `image_3` VARCHAR(1000) NULL,
  PRIMARY KEY (`image_idx`),
  INDEX `fk_PRODUCT_I_PRODUCT1_idx` (`PRODUCT_idx` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_I_PRODUCT1`
    FOREIGN KEY (`PRODUCT_idx`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`prod_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`SAVEPOINT_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`SAVEPOINT_TB` (
  `SAVEPT_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `SAVEPT_AMOUNT` INT NOT NULL DEFAULT 0,
  `SAVEPT_BALANCE` INT NOT NULL DEFAULT 0,
  `SAVEPT_CREATED` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`SAVEPT_IDX`),
  INDEX `fk_SAVEPOINT_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_SAVEPOINT_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PAY_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PAY_TB` (
  `PAY_IDX` INT NOT NULL AUTO_INCREMENT,
  `ORDERD_TB_IDX` INT NOT NULL,
  `SAVEPOINT_TB_IDX` INT NOT NULL,
  `PAY_TYPE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:입금/2:카드/3:카카오페이',
  `PAY_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PAY_PRICE_REAL` INT NOT NULL DEFAULT 0,
  `PAY_PRICE_DEPOSIT` INT NOT NULL DEFAULT 0,
  `PAY_DEPOSIT_NAME` VARCHAR(45) NOT NULL,
  `PAY_DEPOSIT_BANK` TINYINT NOT NULL DEFAULT 1 COMMENT '1:신한/2:국민/3:우리',
  PRIMARY KEY (`PAY_IDX`),
  INDEX `fk_PAY_TB_ORDERS_TB1_idx` (`ORDERD_TB_IDX` ASC) VISIBLE,
  INDEX `fk_PAY_TB_SAVEPOINT_TB1_idx` (`SAVEPOINT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_PAY_TB_ORDERS_TB1`
    FOREIGN KEY (`ORDERD_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_DETAIL_TB` (`ORDERD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PAY_TB_SAVEPOINT_TB1`
    FOREIGN KEY (`SAVEPOINT_TB_IDX`)
    REFERENCES `gamedori`.`SAVEPOINT_TB` (`SAVEPT_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`DEL_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`DEL_TB` (
  `DEL_IDX` INT NOT NULL AUTO_INCREMENT,
  `ORDERD_TB_IDX` INT NOT NULL,
  `DEL_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DEL_CO` TINYINT NOT NULL DEFAULT 1 COMMENT '1:대한통운/2:로젠/3:우체국',
  `DEL_NUM` INT NOT NULL DEFAULT 0,
  `DEL_TDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`DEL_IDX`),
  INDEX `fk_DEL_TB_ORDERS_TB1_idx` (`ORDERD_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_DEL_TB_ORDERS_TB1`
    FOREIGN KEY (`ORDERD_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_DETAIL_TB` (`ORDERD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`USEDPOINT_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`USEDPOINT_TB` (
  `usepoint_idx` INT NOT NULL AUTO_INCREMENT,
  `PAY_idx` INT NOT NULL,
  `usepoint_type` TINYINT NOT NULL COMMENT '1:  / ',
  `usepoint_created` DATETIME NOT NULL,
  PRIMARY KEY (`usepoint_idx`),
  INDEX `fk_USEDPOINT_PAY1_idx` (`PAY_idx` ASC) VISIBLE,
  CONSTRAINT `fk_USEDPOINT_PAY1`
    FOREIGN KEY (`PAY_idx`)
    REFERENCES `gamedori`.`PAY_TB` (`pay_idx`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`POINT_USED_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`POINT_USED_TB` (
  `PT_USED_IDX` INT NOT NULL AUTO_INCREMENT,
  `SAVEPOINT_TB_IDX` INT NOT NULL,
  `USEPOINT_TB_IDX` INT NOT NULL,
  `PT_USED_AMOUNT` INT NOT NULL,
  PRIMARY KEY (`PT_USED_IDX`),
  INDEX `fk_POINT_USED_TB_SAVEPOINT_TB1_idx` (`SAVEPOINT_TB_IDX` ASC) VISIBLE,
  INDEX `fk_POINT_USED_TB_USEPOINT_TB1_idx` (`USEPOINT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_POINT_USED_TB_SAVEPOINT_TB1`
    FOREIGN KEY (`SAVEPOINT_TB_IDX`)
    REFERENCES `gamedori`.`SAVEPOINT_TB` (`SAVEPT_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_POINT_USED_TB_USEPOINT_TB1`
    FOREIGN KEY (`USEPOINT_TB_IDX`)
    REFERENCES `gamedori`.`USEPOINT_TB` (`USEPT_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_A_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_A_TB` (
  `PRODUCT_A_IDX` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_Q_TB_IDX` INT NOT NULL,
  `PROD_A_REPLY` TEXT NOT NULL,
  INDEX `fk_PRODUCT_A_TB_PRODUCT_Q_TB1_idx` (`PRODUCT_Q_TB_IDX` ASC) VISIBLE,
  PRIMARY KEY (`PRODUCT_A_IDX`),
  CONSTRAINT `fk_PRODUCT_A_TB_PRODUCT_Q_TB1`
    FOREIGN KEY (`PRODUCT_Q_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_Q_TB` (`PROD_Q_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`WISHLIST_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`WISHLIST_TB` (
  `idWISHLIST_TB` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `PRODUCT_TB_IDX` INT NOT NULL,
  PRIMARY KEY (`idWISHLIST_TB`),
  INDEX `fk_WISHLIST_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_WISHLIST_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_WISHLIST_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_WISHLIST_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`LEVEL_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`LEVEL_TB` (
  `LEVEL_IDX` INT NOT NULL AUTO_INCREMENT,
  `LEVEL_TYPE` INT NOT NULL DEFAULT 1 COMMENT '1:브론즈/2:실버/3:골드',
  PRIMARY KEY (`LEVEL_IDX`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`MEMBER_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`MEMBER_TB` (
  `MEMBER_IDX` INT NOT NULL AUTO_INCREMENT,
  `LEVEL_TB_IDX` INT NULL,
  `MEMBER_NAME` VARCHAR(45) NOT NULL,
  `MEMBER_PW` VARCHAR(45) NOT NULL,
  `MEMBER_EMAIL` VARCHAR(45) NOT NULL,
  `MEMBER_PHONE` VARCHAR(45) NOT NULL,
  `MEMBER_INDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MEMBER_STATE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:정지/3:탈퇴\n',
  `MEMBER_ROLE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:관리자',
  `MEMBER_EMAIL_YN` INT NOT NULL DEFAULT 1 COMMENT '1:Y,2:N',
  `MEMBER_EMAIL_KEY` VARCHAR(45) NULL,
  `MEMBER_PHONE_YN` INT NOT NULL DEFAULT 1 COMMENT '1:Y 2:N',
  `MEMBER_PHONE_KEY` VARCHAR(45) NULL,
  PRIMARY KEY (`MEMBER_IDX`),
  INDEX `fk_MEMBER_TB_LEVEL_TB1_idx` (`LEVEL_TB_IDX` ASC) VISIBLE,
  UNIQUE INDEX `MEMBER_EMAIL_UNIQUE` (`MEMBER_EMAIL` ASC) VISIBLE,
  CONSTRAINT `fk_MEMBER_TB_LEVEL_TB1`
    FOREIGN KEY (`LEVEL_TB_IDX`)
    REFERENCES `gamedori`.`LEVEL_TB` (`LEVEL_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`NOTICE_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`NOTICE_TB` (
  `NOTICE_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `NOTICE_TITLE` VARCHAR(45) NOT NULL,
  `NOTICE_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `NOTICE_CONTENTS` TEXT NOT NULL,
  `NOTICE_WRITER` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`NOTICE_IDX`),
  INDEX `fk_NOTICE_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_NOTICE_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`ORDER_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`ORDER_TB` (
  `ORDER_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `ORDER_DATE` DATETIME NOT NULL,
  `ORDER_ADDR1` VARCHAR(45) NOT NULL,
  `ORDER_ADDR2` VARCHAR(45) NOT NULL,
  `ORDER_ADDR3` VARCHAR(45) NOT NULL,
  `ORDER_NAME` VARCHAR(45) NOT NULL,
  `ORDER_PHONE` VARCHAR(45) NOT NULL,
  `ORDER_DEL_TYPE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:도서산간',
  PRIMARY KEY (`ORDER_IDX`),
  INDEX `fk_ORDER_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_ORDER_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`COUPON_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`COUPON_TB` (
  `COUPON_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `COUPON_NAME` VARCHAR(45) NOT NULL,
  `COUPON_DISCOUNT` DOUBLE NOT NULL,
  `COUPON_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `COUPON_START` DATETIME NOT NULL,
  `COUPON_END` DATETIME NOT NULL,
  `COUPON_MIN_AMOUNT` INT NOT NULL,
  `COUPON_MAX_AMOUNT` INT NOT NULL,
  PRIMARY KEY (`COUPON_IDX`),
  INDEX `fk_COUPON_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_COUPON_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`CATEGORY_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`CATEGORY_TB` (
  `CATE_CODE` INT NOT NULL AUTO_INCREMENT,
  `CATE_NAME` VARCHAR(10) NOT NULL,
  `CATE_REFCODE` TINYINT NOT NULL,
  PRIMARY KEY (`CATE_CODE`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_TB` (
  `PROD_IDX` INT NOT NULL AUTO_INCREMENT,
  `CATEGORY_TB_CODE` INT NOT NULL,
  `PROD_NAME` VARCHAR(45) NOT NULL,
  `PROD_PRICE` INT NOT NULL,
  `PROD_DETAIL` TEXT NOT NULL,
  `PROD_STOCK` INT NOT NULL,
  `PROD_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PROD_HIT` INT NOT NULL,
  `PROD_SALES` INT NOT NULL,
  `PROD_CO` VARCHAR(45) NOT NULL,
  `PROD_OPT` VARCHAR(45) NOT NULL,
  `PROD_RDATE` VARCHAR(45) NOT NULL,
  `PROD_RATING` TINYINT NOT NULL DEFAULT 1 COMMENT '1:일반/2:성인',
  PRIMARY KEY (`PROD_IDX`),
  INDEX `fk_PRODUCT_TB_CATEGORY_TB1_idx` (`CATEGORY_TB_CODE` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_TB_CATEGORY_TB1`
    FOREIGN KEY (`CATEGORY_TB_CODE`)
    REFERENCES `gamedori`.`CATEGORY_TB` (`CATE_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`ORDER_DETAIL_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`ORDER_DETAIL_TB` (
  `ORDERD_IDX` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `COUPON_TB_IDX` INT NOT NULL,
  `ORDER_TB_IDX` INT NOT NULL,
  `ORDERD_QTY` INT NOT NULL,
  `ORDERD_PRICE` INT NOT NULL,
  `ORDERD_STATE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:주문접수/2:결제완료/3:상품준비중/4:발송준비중/5:발송완료/6:주문취소/7:반품접수/8:반품완료',
  PRIMARY KEY (`ORDERD_IDX`),
  INDEX `fk_ORDERS_TB_COUPON_TB1_idx` (`COUPON_TB_IDX` ASC) VISIBLE,
  INDEX `fk_ORDERS_TB_ORDER_TB1_idx` (`ORDER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_ORDER_DETAIL_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_ORDERS_TB_COUPON_TB1`
    FOREIGN KEY (`COUPON_TB_IDX`)
    REFERENCES `gamedori`.`COUPON_TB` (`COUPON_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDERS_TB_ORDER_TB1`
    FOREIGN KEY (`ORDER_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_TB` (`ORDER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDER_DETAIL_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`SAVEPOINT_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`SAVEPOINT_TB` (
  `SAVEPT_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `SAVEPT_AMOUNT` INT NOT NULL DEFAULT 0,
  `SAVEPT_BALANCE` INT NOT NULL DEFAULT 0,
  `SAVEPT_CREATED` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`SAVEPT_IDX`),
  INDEX `fk_SAVEPOINT_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_SAVEPOINT_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PAY_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PAY_TB` (
  `PAY_IDX` INT NOT NULL AUTO_INCREMENT,
  `ORDERD_TB_IDX` INT NOT NULL,
  `SAVEPOINT_TB_IDX` INT NOT NULL,
  `PAY_TYPE` TINYINT NOT NULL DEFAULT 1 COMMENT '1:입금/2:카드/3:카카오페이',
  `PAY_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PAY_PRICE_REAL` INT NOT NULL DEFAULT 0,
  `PAY_PRICE_DEPOSIT` INT NOT NULL DEFAULT 0,
  `PAY_DEPOSIT_NAME` VARCHAR(45) NOT NULL,
  `PAY_DEPOSIT_BANK` TINYINT NOT NULL DEFAULT 1 COMMENT '1:신한/2:국민/3:우리',
  PRIMARY KEY (`PAY_IDX`),
  INDEX `fk_PAY_TB_ORDERS_TB1_idx` (`ORDERD_TB_IDX` ASC) VISIBLE,
  INDEX `fk_PAY_TB_SAVEPOINT_TB1_idx` (`SAVEPOINT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_PAY_TB_ORDERS_TB1`
    FOREIGN KEY (`ORDERD_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_DETAIL_TB` (`ORDERD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PAY_TB_SAVEPOINT_TB1`
    FOREIGN KEY (`SAVEPOINT_TB_IDX`)
    REFERENCES `gamedori`.`SAVEPOINT_TB` (`SAVEPT_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`USEPOINT_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`USEPOINT_TB` (
  `USEPT_IDX` INT NOT NULL AUTO_INCREMENT,
  `PAY_TB_IDX` INT NOT NULL,
  `USEPT_CREATED` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`USEPT_IDX`),
  INDEX `fk_USEPOINT_TB_PAY_TB1_idx` (`PAY_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_USEPOINT_TB_PAY_TB1`
    FOREIGN KEY (`PAY_TB_IDX`)
    REFERENCES `gamedori`.`PAY_TB` (`PAY_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`POINT_USED_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`POINT_USED_TB` (
  `PT_USED_IDX` INT NOT NULL AUTO_INCREMENT,
  `SAVEPOINT_TB_IDX` INT NOT NULL,
  `USEPOINT_TB_IDX` INT NOT NULL,
  `PT_USED_AMOUNT` INT NOT NULL,
  PRIMARY KEY (`PT_USED_IDX`),
  INDEX `fk_POINT_USED_TB_SAVEPOINT_TB1_idx` (`SAVEPOINT_TB_IDX` ASC) VISIBLE,
  INDEX `fk_POINT_USED_TB_USEPOINT_TB1_idx` (`USEPOINT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_POINT_USED_TB_SAVEPOINT_TB1`
    FOREIGN KEY (`SAVEPOINT_TB_IDX`)
    REFERENCES `gamedori`.`SAVEPOINT_TB` (`SAVEPT_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_POINT_USED_TB_USEPOINT_TB1`
    FOREIGN KEY (`USEPOINT_TB_IDX`)
    REFERENCES `gamedori`.`USEPOINT_TB` (`USEPT_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`DEL_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`DEL_TB` (
  `DEL_IDX` INT NOT NULL AUTO_INCREMENT,
  `ORDERD_TB_IDX` INT NOT NULL,
  `DEL_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `DEL_CO` TINYINT NOT NULL DEFAULT 1 COMMENT '1:대한통운/2:로젠/3:우체국',
  `DEL_NUM` INT NOT NULL DEFAULT 0,
  `DEL_TDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`DEL_IDX`),
  INDEX `fk_DEL_TB_ORDERS_TB1_idx` (`ORDERD_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_DEL_TB_ORDERS_TB1`
    FOREIGN KEY (`ORDERD_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_DETAIL_TB` (`ORDERD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`ADDRESS_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`ADDRESS_TB` (
  `ADDRESS_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `ADDR_1` VARCHAR(45) NOT NULL,
  `ADDR_2` VARCHAR(45) NOT NULL,
  `ADDR_3` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ADDRESS_IDX`),
  INDEX `fk_ADDRESS_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_ADDRESS_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`REFUND_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`REFUND_TB` (
  `REFUND_IDX` INT NOT NULL AUTO_INCREMENT,
  `ORDERD_TB_IDX` INT NOT NULL,
  `REFUND_RES` TINYINT NOT NULL DEFAULT 1,
  `REFUND_IMG` VARCHAR(1000) NOT NULL,
  `REFUND_EMAIL` VARCHAR(45) NOT NULL,
  `REFUND_YN` TINYINT NOT NULL DEFAULT 2 COMMENT '1:Y/2:N',
  PRIMARY KEY (`REFUND_IDX`),
  INDEX `fk_REFUND_TB_ORDERS_TB1_idx` (`ORDERD_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_REFUND_TB_ORDERS_TB1`
    FOREIGN KEY (`ORDERD_TB_IDX`)
    REFERENCES `gamedori`.`ORDER_DETAIL_TB` (`ORDERD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`QA_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`QA_TB` (
  `QA_IDX` INT NOT NULL AUTO_INCREMENT,
  `MEMBER_TB_IDX` INT NOT NULL,
  `QA_TITLE` VARCHAR(45) NOT NULL,
  `QA_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `QA_CONTENTS` TEXT NOT NULL,
  `QA_WRITER` VARCHAR(45) NOT NULL,
  `QA_YN` TINYINT NOT NULL DEFAULT 2 COMMENT '1:Y/2:N',
  PRIMARY KEY (`QA_IDX`),
  INDEX `fk_QA_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_QA_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`QA_A_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`QA_A_TB` (
  `QA_A_REPLY` VARCHAR(45) NOT NULL,
  `QA_TB_IDX` INT NOT NULL,
  PRIMARY KEY (`QA_A_REPLY`),
  INDEX `fk_QA_A_TB_QA_TB1_idx` (`QA_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_QA_A_TB_QA_TB1`
    FOREIGN KEY (`QA_TB_IDX`)
    REFERENCES `gamedori`.`QA_TB` (`QA_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`WISHLIST_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`WISHLIST_TB` (
  `idWISHLIST_TB` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `PRODUCT_TB_IDX` INT NOT NULL,
  PRIMARY KEY (`idWISHLIST_TB`),
  INDEX `fk_WISHLIST_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_WISHLIST_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_WISHLIST_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_WISHLIST_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`CART_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`CART_TB` (
  `CART_QTY` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `CART_YN` TINYINT NOT NULL DEFAULT 1 COMMENT '1:Y/2:N',
  PRIMARY KEY (`CART_QTY`),
  INDEX `fk_CART_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_CART_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_CART_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CART_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_Q_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_Q_TB` (
  `PROD_Q_IDX` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `PROD_Q_TITLE` VARCHAR(45) NOT NULL,
  `PROD_Q_CONTENTS` TEXT NOT NULL,
  `PROD_Q_WRITER` VARCHAR(45) NOT NULL,
  `PROD_Q_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PROD_Q_YN` TINYINT NOT NULL DEFAULT '2' COMMENT '1:Y/2:N',
  `PROD_Q_SECRET` TINYINT NOT NULL DEFAULT '2' COMMENT '1:Y/2:N',
  PRIMARY KEY (`PROD_Q_IDX`),
  INDEX `fk_PRODUCT_Q_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  INDEX `fk_PRODUCT_Q_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_Q_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_Q_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_A_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_A_TB` (
  `PRODUCT_A_IDX` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_Q_TB_IDX` INT NOT NULL,
  `PROD_A_REPLY` TEXT NOT NULL,
  INDEX `fk_PRODUCT_A_TB_PRODUCT_Q_TB1_idx` (`PRODUCT_Q_TB_IDX` ASC) VISIBLE,
  PRIMARY KEY (`PRODUCT_A_IDX`),
  CONSTRAINT `fk_PRODUCT_A_TB_PRODUCT_Q_TB1`
    FOREIGN KEY (`PRODUCT_Q_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_Q_TB` (`PROD_Q_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`PRODUCT_IMG_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`PRODUCT_IMG_TB` (
  `IMG_IDX` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `IMG_ORIGIN` VARCHAR(1000) NOT NULL,
  `IMG_SAVE` VARCHAR(1000) NOT NULL,
  `IMG_SUM` VARCHAR(1000) NOT NULL,
  `IMG_1` VARCHAR(1000) NULL,
  `IMG_2` VARCHAR(1000) NULL,
  `IMG_3` VARCHAR(1000) NULL,
  PRIMARY KEY (`IMG_IDX`),
  INDEX `fk_PRODUCT_IMG_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_IMG_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gamedori`.`REVIEW_TB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gamedori`.`REVIEW_TB` (
  `REVIEW_IDX` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_TB_IDX` INT NOT NULL,
  `MEMBER_TB_IDX` INT NOT NULL,
  `REVIEW_TITLE` VARCHAR(45) NOT NULL,
  `REVIEW_CONTENTS` TEXT NOT NULL,
  `REVIEW_WRITER` VARCHAR(45) NOT NULL,
  `REVIEW_WDATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `REVIEW_HIT` INT NOT NULL,
  `REVIEW_STAR` TINYINT NOT NULL DEFAULT 0 COMMENT '1 : 0.5점 / 2 : 1점 / 3 : 1.5점 / 4 : 2점 / 5 : 2.5점 / 6 : 3점 / 7 : 3.5점 /  8 : 4점  / 9 : 4.5점 / 10 : 5점',
  `REVIEW_IMG` VARCHAR(1000) NOT NULL,
  PRIMARY KEY (`REVIEW_IDX`),
  INDEX `fk_REVIEW_TB_PRODUCT_TB1_idx` (`PRODUCT_TB_IDX` ASC) VISIBLE,
  INDEX `fk_REVIEW_TB_MEMBER_TB1_idx` (`MEMBER_TB_IDX` ASC) VISIBLE,
  CONSTRAINT `fk_REVIEW_TB_PRODUCT_TB1`
    FOREIGN KEY (`PRODUCT_TB_IDX`)
    REFERENCES `gamedori`.`PRODUCT_TB` (`PROD_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_REVIEW_TB_MEMBER_TB1`
    FOREIGN KEY (`MEMBER_TB_IDX`)
    REFERENCES `gamedori`.`MEMBER_TB` (`MEMBER_IDX`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
